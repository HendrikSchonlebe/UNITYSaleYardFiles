<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUpdate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAW5JREFUWEfF
        lA2uwyAMg3v0Hq03e4tJXEIetLCm2idZ4Td20bRthn3f/65kxxr2fZO9DXte68DgOI6hLEDTHMaKhghh
        1mAAfq2XD+BNUGEOnHHUHI2RtaVqMDXDqlwp8nOOGdKFumc+AAR6VcevBZBjpWk0wjrXeAbVNAcDjMQX
        0ABqzkpDhEDt6B41uFL9StRqWn+ASl2jsAePITC4A42UaNq+gFLNuQefIQwQn122Tvk5DbyRrsuKnQm6
        pn3qa8nxYvTfXIUx10zT+EtdobHSq3XMYC5IDhpAjWRa5OccpwaQ27EBmxYpjVnU98jtuwbFHKR+NZkI
        AGjo9RzpktPoW34WAMZRtpXH4A/m5HXzHr0QNsyD5vhfl88LVUP0ZNefg2ZKNK8hIhYgJwQD9M37NS0A
        Gq0KIVDlek6AWWia/gLg6rl9lSvnS2BcmjxlJQSNXwlwZ84qV3IDgJUQzjw3wIrkSm4Awzee1QO27QNC
        VragAlFZIQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAZ5JREFUWEft
        1b1LQlEYBvCzRUFEWZkQaWYS5qJEoH0RklE05BSVNgjNbiEE/VHRFjVE1JYRtDdG0BANttjpvO973ouc
        q5gfdJJ64Adyz70+D9dB8R8zMrsoa9HH347cW5DV9OXGqVUO9PG30/QAV+lJnhjX9e1145Tmlki0F734
        BdK3uWMW2RtQzJLjHCnuk6oRQD/mxFWciaNKWKAuGsAK2+RohxQyxLzPLN6cQeVJgRoWc1xf/NMDzDgF
        +RTZTZLDdcLFB8tk1Y9eVRlouZhjfQDHGcK2oiQVJHMexIUdK+b8ngH8E6RDJNaP3gICPfjI7SjRj7cf
        +wOSPok2ImR+EL2r1wyeJ8j9GOEBHRtibYBMqFKwNk3iqhhMCVRSZeBRvXbwNE7uvKTtIdYGOMXpMOHi
        SA+qqHJgFrCSKgfX6jM4HyZ8rmvqx9oAmfCqYmUlQGIDZLYPcbG+3Ul1ObjRLlQpOPUQPtePuWN9AOcz
        JCQoB8mH+ksF+rhuuOBqhJwNkUtVDrpnAKfVPxVzSNPFHOsD2g0X/90BXRIhvgAAxgo5fUVykgAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="btnHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEASURBVFhH7Y5RDsMgDEN39N2cNVFhQJ8JdP1opVl6FaQO9iultMQm+0h6fwQOe5qQd0Dl7d8h
        cJgpj1HQDBNFcGiMgpXI6wxK8FCEz4p2VYnj4MfwLHqDSrQXEW6sit5wuhLfw4XhWfSWU5W4R4FRuKE0
        +x/ZS/wLhOERSuQ9YNmPLqBEXuTRBZTIK3lsASXyDrlFAdtbLaFEXsmWaSunClzCFQWy6F9IXcAPCyWU
        yIvs4cZ9CvhlokQk2mmowo1yKIOgRCTaKXThRnMpw5MlyFuAcOMwyIxKKJHXEeEGDjNeYqII/XP2fbMo
        cNhTihgUVFN5+3cIHI6oA4jePya9Po2IA4LEG13VAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAlJSWUlJTIyMhYWFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARERFERERdXV0pKSkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD////////////AAAD/wAAAwAAAAMAAAADwAAAA8AAAAPAAAADwAAAA/AAAAPwA
        AAD8AAD//AAA//8AA///AAP//8AP///AD////AP///wD////AP///wD////AP///wD////A////wP///
        /D////w//////////////////////w==
</value>
  </data>
</root>